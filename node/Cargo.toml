[workspace]
members = [
    "actors/bft",
    "actors/executor",
    "actors/network",
    "libs/concurrency",
    "libs/crypto",
    "libs/protobuf",
    "libs/protobuf_build",
    "libs/roles",
    "libs/storage",
    "libs/utils", 
    "tests",
    "tools",
]
resolver = "2"

[workspace.package]
edition = "2021"
authors = ["The Matter Labs Team <hello@matterlabs.dev>"]
homepage = "https://matter-labs.io/"
license = "MIT"

[workspace.dependencies]
# Crates from this repo.
zksync_consensus_bft = { path = "actors/bft" }
zksync_consensus_crypto = { path = "libs/crypto" }
zksync_consensus_executor = { path = "actors/executor" }
zksync_consensus_network = { path = "actors/network" }
zksync_consensus_roles = { path = "libs/roles" }
zksync_consensus_storage = { path = "libs/storage" }
zksync_consensus_tools = { path = "tools" }
zksync_consensus_utils = { path = "libs/utils" }

# Crates from this repo that might become independent in the future.
zksync_concurrency = { path = "libs/concurrency" }
zksync_protobuf = { path = "libs/protobuf" }
zksync_protobuf_build = { path = "libs/protobuf_build" }

# Crates from Matter Labs.
pairing = { package = "pairing_ce", git = "https://github.com/matter-labs/pairing.git", rev = "d24f2c5871089c4cd4f54c0ca266bb9fef6115eb" }
vise = { version = "0.1.0", git = "https://github.com/matter-labs/vise.git", rev = "a5bb80c9ce7168663114ee30e794d6dc32159ee4" }
vise-exporter = { version = "0.1.0", git = "https://github.com/matter-labs/vise.git", rev = "a5bb80c9ce7168663114ee30e794d6dc32159ee4" }

# Crates from third-parties.
anyhow = "1"
assert_matches = "1.5.0"
async-trait = "0.1.71"
bit-vec = "0.6"
blst = "0.3.11"
clap = { version = "4.3.3", features = ["derive"] }
criterion = "0.5.1"
ed25519-dalek = { version = "2.0.0", features = ["rand_core"] }
ff_ce = "0.14.3"
heck = "0.5.0"
hex = "0.4.3"
im = "15.1.0"
jsonrpsee = { version = "0.21.0", features = ["server", "http-client"]  }
k8s-openapi = { version = "0.21.0", features = ["latest"] }
kube = { version = "0.88.1", features = ["runtime", "derive"] }
num-bigint = "0.4.4"
num-traits = "0.2.18"
once_cell = "1.17.1"
pin-project = "1.1.0"
pretty_assertions = "1.4.0"
prettyplease = "0.2.6"
proc-macro2 = "1.0.66"
prost = "0.12.0"
prost-build = "0.12.0"
prost-reflect = { version = "0.12.0", features = ["serde"] }
protox = "0.5.0"
quick-protobuf = "0.8.1"
quote = "1.0.33"
rand = "0.8.0"
rand04 = { package = "rand", version = "0.4" }
rocksdb = "0.21.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.95"
serde_yaml = "0.9"
sha3 = "0.10.8"
snow = "0.9.3"
syn = "2.0.17"
tempfile = "3"
test-casing = "0.1.0"
thiserror = "1.0.40"
time = "0.3.23"
tokio = { version = "1.34.0", features = ["full"] }
tower = { version = "0.4.13" }
tracing = { version = "0.1.37", features = ["attributes"] }
tracing-subscriber = { version = "0.3.16", features = ["env-filter", "fmt"] }
zeroize = { version = "1.7.0", features = ["zeroize_derive"] }

# Note that "bench" profile inherits from "release" profile and
# "test" profile inherits from "dev" profile.
# https://doc.rust-lang.org/cargo/reference/profiles.html#test
#
# However "test" and "bench" profiles ignore the panic setting:
# https://doc.rust-lang.org/cargo/reference/profiles.html#panic
#
# It won't change until panic-abort-tests is stable:
# https://doc.rust-lang.org/cargo/reference/unstable.html#panic-abort-tests
[profile.dev]
panic = 'abort'

[profile.release]
panic = 'abort'

[profile.dev.package.zksync_consensus_crypto]
opt-level = 3

# Compile all the external dependencies with optimizations, because
# some of them (especially the cryptographic primitives) are extremely
# slow when compiled without optimizations, and make the tests run slow.
# Longer compilation is OK, because the compiled dependencies are cached.
# Enabling compilation optimizations for the crates in this repository
# is currently considered too slow for development.
[profile.dev.package."*"]
opt-level = 3

[workspace.lints.rust]
unsafe_code = "deny"
missing_docs = "warn"
unreachable_pub = "warn"
unused_qualifications = "warn"

[workspace.lints.clippy]
# restriction group
create_dir = "warn"
empty_structs_with_brackets = "warn"
float_arithmetic = "warn"
missing_docs_in_private_items = "warn"
non_ascii_literal = "warn"
partial_pub_fields = "warn"
print_stdout = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
try_err = "warn"
separated_literal_suffix = "warn"

# pedantic group
bool_to_int_with_if = "warn"
default_trait_access = "warn"
if_not_else = "warn"
manual_assert = "warn"
manual_instant_elapsed = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
match_bool = "warn"
wildcard_imports = "warn"

# cargo group
wildcard_dependencies = "warn"

# Produces too many false positives.
redundant_locals = "allow"
needless_pass_by_ref_mut = "allow"
box_default = "allow"
# remove once fix to https://github.com/rust-lang/rust-clippy/issues/11764 is available on CI.
map_identity = "allow"
# &*x is not equivalent to x, because it affects borrowing in closures.
borrow_deref_ref = "allow"
